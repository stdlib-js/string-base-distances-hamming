{
  "version": 3,
  "sources": ["../lib/main.js", "../lib/index.js"],
  "sourcesContent": ["/**\n* @license Apache-2.0\n*\n* Copyright (c) 2023 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isString = require( '@stdlib/assert-is-string' ).isPrimitive;\nvar format = require( '@stdlib/string-format' );\n\n\n// MAIN //\n\n/**\n* Calculates the Hamming distance between two equal-length strings.\n*\n* ## Notes\n*\n* -   The function returns a sentinel value of `-1` if the input string lengths differ.\n*\n* @param {string} s1 - first input string\n* @param {string} s2 - second input string\n* @throws {TypeError} first argument must be a string\n* @throws {TypeError} second argument must be a string\n* @returns {integer} Hamming distance\n*\n* @example\n* var distance = hammingDistance( 'algorithm', 'altruistic' );\n* // returns -1\n*/\nfunction hammingDistance( s1, s2 ) {\n\tvar out;\n\tvar i;\n\n\tif ( !isString( s1 ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. First argument must be a string. Value: `%s`.', s1 ) );\n\t}\n\tif ( !isString( s2 ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. Second argument must be a string. Value: `%s`.', s2 ) );\n\t}\n\tif ( s1.length !== s2.length ) {\n\t\treturn -1;\n\t}\n\tout = 0;\n\tfor ( i = 0; i < s1.length; i++ ) {\n\t\tif (s1[ i ] !== s2[ i ] ) {\n\t\t\tout += 1;\n\t\t}\n\t}\n\treturn out;\n}\n\n\n// EXPORTS //\n\nmodule.exports = hammingDistance;\n", "/**\n* @license Apache-2.0\n*\n* Copyright (c) 2023 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Calculate the Hamming distance between two equal-length strings.\n*\n* @module @stdlib/string-base-distances-hamming\n*\n* @example\n* var hammingDistance = require( '@stdlib/string-base-distances-hamming' );\n*\n* var dist = hammingDistance( 'fly', 'ant' );\n* // returns 3\n*\n* dist = hammingDistance( 'frog', 'blog' );\n* // returns 2\n*\n* dist = hammingDistance( 'javascript', 'typescript' );\n* // returns 4\n*/\n\n\n// MODULES //\n\nvar main = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = main;\n"],
  "mappings": "uGAAA,IAAAA,EAAAC,EAAA,SAAAC,EAAAC,EAAA,cAsBA,IAAIC,EAAW,QAAS,0BAA2B,EAAE,YACjDC,EAAS,QAAS,uBAAwB,EAsB9C,SAASC,EAAiBC,EAAIC,EAAK,CAClC,IAAIC,EACAC,EAEJ,GAAK,CAACN,EAAUG,CAAG,EAClB,MAAM,IAAI,UAAWF,EAAQ,kEAAmEE,CAAG,CAAE,EAEtG,GAAK,CAACH,EAAUI,CAAG,EAClB,MAAM,IAAI,UAAWH,EAAQ,mEAAoEG,CAAG,CAAE,EAEvG,GAAKD,EAAG,SAAWC,EAAG,OACrB,MAAO,GAGR,IADAC,EAAM,EACAC,EAAI,EAAGA,EAAIH,EAAG,OAAQG,IACvBH,EAAIG,CAAE,IAAMF,EAAIE,CAAE,IACrBD,GAAO,GAGT,OAAOA,CACR,CAKAN,EAAO,QAAUG,IC7BjB,IAAIK,EAAO,IAKX,OAAO,QAAUA",
  "names": ["require_main", "__commonJSMin", "exports", "module", "isString", "format", "hammingDistance", "s1", "s2", "out", "i", "main"]
}
